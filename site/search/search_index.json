{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a la p\u00e1gina de Jose Manuel Segura Rodriguez","text":""},{"location":"#-practica-iaw-51-https-con-lets-encrypt-docker-y-docker-compose","title":"- Practica IAW 5.1. HTTPS con Let\u2019s Encrypt, Docker y Docker Compose","text":"<p>En esta pr\u00e1ctica vamos a habilitar el protocolo HTTPS en un sitio web PrestaShop que se estar\u00e1 ejecutando sobre contenedores Docker en una instancia EC2 de Amazon Web Services (AWS).</p>"},{"location":"#-practica-iaw-52-despliegue-de-wordpress-con-docker-y-docker-compose","title":"- Practica IAW 5.2. Despliegue de WordPress con Docker y Docker Compose","text":"<p>En esta pr\u00e1ctica tendremos que realizar la implantaci\u00f3n de un sitio WordPress en Amazon Web Services (AWS) haciendo uso de contenedores Docker y la herramienta Docker Compose.</p>"},{"location":"about/","title":"About","text":"<p>about hola</p>"},{"location":"practica1/","title":"Hola - Jose Manuel Segura Rodriguez","text":"<p>Blablabla</p> <p>Blebleble</p>"},{"location":"practica5.1/","title":"practica-iaw-5.1","text":""},{"location":"practica5.1/#https-con-lets-encrypt-docker-y-docker-compose","title":"HTTPS con Let's Encrypt, Docker y Docker Compose","text":""},{"location":"practica5.1/#script-en-docker-compose","title":"Script en docker-compose","text":"<p>Este script define el escenario de Docker Compose para desplegar un sitio web PrestaShop con HTTPS habilitado mediante Let's Encrypt, utilizando la imagen HTTPS-PORTAL.</p>"},{"location":"practica5.1/#1-archivo-docker-composeyml","title":"1. Archivo <code>docker-compose.yml</code>","text":"<pre><code>version: '3.4'\n\nservices:\n  mysql:\n    image: mysql:9.1\n    ports: \n      - 3306:3306\n    environment: \n      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\n      - MYSQL_DATABASE=${MYSQL_DATABASE}\n      - MYSQL_USER=${MYSQL_USER}\n      - MYSQL_PASSWORD=${MYSQL_PASSWORD}\n    volumes: \n      - mysql_data:/var/lib/mysql\n    networks: \n      - backend-network\n    restart: always\n\n  phpmyadmin:\n    image: phpmyadmin:5.2.1\n    ports:\n      - 8080:80\n    environment: \n      - PMA_ARBITRARY=1\n    networks: \n      - backend-network\n      - frontend-network\n    restart: always\n    depends_on: \n      - mysql\n\n  prestashop:\n    image: prestashop/prestashop:8\n    environment: \n      - DB_SERVER=mysql\n    volumes:\n      - prestashop_data:/var/www/html\n    networks: \n      - backend-network\n      - frontend-network\n    restart: always\n    depends_on: \n      - mysql\n\n  https-portal:\n    image: steveltn/https-portal:1\n    ports:\n      - 80:80\n      - 443:443\n    restart: always\n    environment:\n      DOMAINS: \"${DOMAIN} -&gt; http://prestashop:80\"\n      STAGE: 'production' # No utilizar production hasta probar staging\n      # FORCE_RENEW: 'true'\n    networks:\n      - frontend-network\n\nvolumes:\n  mysql_data:\n  prestashop_data:\n\nnetworks: \n  backend-network:\n  frontend-network:\n</code></pre>"},{"location":"practica5.1/#2-archivo-env","title":"2. Archivo <code>.env</code>","text":"<pre><code>MYSQL_ROOT_PASSWORD=root\nMYSQL_DATABASE=prestashop\nMYSQL_USER=ps_user\nMYSQL_PASSWORD=ps_password\nDOMAIN=jmsr-iawpractica51.ddns.net\n</code></pre>"},{"location":"practica5.1/#3-despliegue-y-configuracion","title":"3. Despliegue y configuraci\u00f3n","text":"<ol> <li>Clonar el repositorio:</li> </ol> <p><code>bash    git clone https://github.com/jsegrod1512/practica-iaw-5.1.git    cd practica-iaw-5.1</code></p> <ol> <li> <p>Crear el archivo <code>.env</code>:    Colocamos en la ra\u00edz del proyecto el archivo <code>.env</code> con las variables de entorno.</p> </li> <li> <p>Levantar los servicios:</p> </li> </ol> <p><code>bash    docker-compose up -d</code></p> <ol> <li>Verificar el despliegue: </li> <li>Accedemos a <code>https://jmsr-iawpractica51.ddns.net</code> para visualizar el sitio PrestaShop con HTTPS habilitado.  </li> </ol> <p>Capturas de pantalla:</p> <ul> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> </ul>"},{"location":"practica5.2/","title":"practica-iaw-5.2","text":""},{"location":"practica5.2/#despliegue-de-wordpress-con-docker-y-docker-compose","title":"Despliegue de WordPress con Docker y Docker Compose","text":""},{"location":"practica5.2/#script-en-docker-compose","title":"Script en docker-compose","text":"<p>Este script define el escenario de Docker Compose para desplegar un sitio web WordPress utilizando HTTPS habilitado a trav\u00e9s de HTTPS-portal, junto con servicios adicionales como MySQL y phpMyAdmin.</p>"},{"location":"practica5.2/#1-archivo-docker-composeyml","title":"1. Archivo <code>docker-compose.yml</code>","text":"<pre><code>version: '3.4'\n\nservices:\n  mysql:\n    image: mysql:9.1\n    ports: \n      - 3306:3306\n    environment: \n      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\n      - MYSQL_DATABASE=${WORDPRESS_DATABASE_NAME}\n      - MYSQL_USER=${WORDPRESS_DATABASE_USER}\n      - MYSQL_PASSWORD=${WORDPRESS_DATABASE_PASSWORD}\n    volumes: \n      - mysql_data:/var/lib/mysql\n    networks: \n      - backend-network\n    restart: always\n\n  phpmyadmin:\n    image: phpmyadmin:5.2.1\n    ports:\n      - 8080:80\n    environment: \n      - PMA_ARBITRARY=1\n    networks: \n      - backend-network\n      - frontend-network\n    restart: always\n    depends_on: \n      - mysql\n\n  wordpress:\n    image: bitnami/wordpress\n    environment: \n      - WORDPRESS_DATABASE_HOST=${WORDPRESS_DATABASE_HOST}\n      - WORDPRESS_DATABASE_USER=${WORDPRESS_DATABASE_USER}\n      - WORDPRESS_DATABASE_PASSWORD=${WORDPRESS_DATABASE_PASSWORD}\n      - WORDPRESS_DATABASE_NAME=${WORDPRESS_DATABASE_NAME}\n      - WORDPRESS_BLOG_NAME=${WORDPRESS_BLOG_NAME}\n      - WORDPRESS_USERNAME=${WORDPRESS_USERNAME}\n      - WORDPRESS_PASSWORD=${WORDPRESS_PASSWORD}\n      - WORDPRESS_EMAIL=${WORDPRESS_EMAIL}\n    volumes:\n      - wordpress_data:/var/www/html\n    networks: \n      - backend-network\n      - frontend-network\n    restart: always\n    depends_on: \n      - mysql\n\n  https-portal:\n    image: steveltn/https-portal:1\n    ports:\n      - 80:80\n      - 443:443\n    restart: always\n    environment:\n      DOMAINS: \"${DOMAIN} -&gt; http://wordpress:8080\"\n      STAGE: 'production' # No utilizar production hasta probar staging\n      # FORCE_RENEW: 'true'\n    networks:\n      - frontend-network\n\nvolumes:\n  mysql_data:\n  wordpress_data:\n\nnetworks: \n  backend-network:\n  frontend-network:\n</code></pre>"},{"location":"practica5.2/#2-archivo-env","title":"2. Archivo <code>.env</code>","text":"<pre><code>MYSQL_ROOT_PASSWORD=root\n\nDOMAIN=jmsrpractica52.ddns.net\n\nWORDPRESS_DATABASE_HOST=mysql\nWORDPRESS_DATABASE_USER=bn_wordpress\nWORDPRESS_DATABASE_PASSWORD=bitnami\nWORDPRESS_DATABASE_NAME=bitnami_wordpress\nWORDPRESS_BLOG_NAME=\"Blog de Wordpress Jose Manuel\"\nWORDPRESS_USERNAME=user\nWORDPRESS_PASSWORD=bitnami\nWORDPRESS_EMAIL=josemanuellsr39@gmail.com\n</code></pre>"},{"location":"practica5.2/#3-despliegue-y-configuracion","title":"3. Despliegue y configuraci\u00f3n","text":"<ol> <li>Clonar el repositorio:</li> </ol> <p><code>bash    git clone https://github.com/jsegrod1512/practica-iaw-5.2.git    cd practica-iaw-5.2</code></p> <ol> <li> <p>Crear el archivo <code>.env</code>:    Colocamos en la ra\u00edz del proyecto el archivo <code>.env</code> con las variables de entorno.</p> </li> <li> <p>Levantar los servicios:</p> </li> </ol> <p><code>bash    docker-compose up -d</code></p> <ol> <li>Verificar el despliegue: </li> <li>Accedemos a <code>https://jmsr-iawpractica52.ddns.net</code> para visualizar el sitio WordPress con HTTPS habilitado.</li> </ol> <p>Capturas de pantalla:</p> <ul> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> </ul>"}]}